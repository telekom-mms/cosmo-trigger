---
name: "Release Binaries"

# yamllint disable-line rule:truthy
on:
  workflow_run:
    workflows: ["Semantic Release"]
    types: ["completed"]
    branches: ["main"]

jobs:
  build:
    # Only run if the semantic-release workflow succeeded
    if: "${{ github.event.workflow_run.conclusion == 'success' }}"
    permissions:
      contents: "write"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.event.workflow_run.head_sha }}"

      - name: "Setup Deno"
        uses: "denoland/setup-deno@v2"
        with:
          deno-version: "v2.4.2"

      - name: "Cache dependencies"
        run: "deno cache src/app.ts"

      - name: "Build all binaries"
        run: "deno task build:all"

      - name: "Upload binaries"
        uses: "actions/upload-artifact@v4"
        with:
          name: "binaries"
          path: "./dist/*"

  upload:
    needs: "build"
    if: "${{ github.event.workflow_run.conclusion == 'success' }}"
    permissions:
      contents: "write"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        include:
          - platform: "linux-x64"
            extension: ""
          - platform: "linux-arm64"
            extension: ""
          - platform: "macos-x64"
            extension: ""
          - platform: "macos-arm64"
            extension: ""
          - platform: "windows-x64"
            extension: ".exe"
    steps:
      - name: "Download binaries"
        uses: "actions/download-artifact@v4"
        with:
          name: "binaries"
          path: "./dist"

      - name: "Get latest release"
        id: "get_release"
        uses: "actions/github-script@v7"
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            return release.data;

      - name: "Upload ${{ matrix.platform }} binary"
        uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        # yamllint disable rule:line-length
        with:
          upload_url: "${{ fromJSON(steps.get_release.outputs.result).upload_url }}"
          asset_path: "./dist/cosmo-trigger-${{ matrix.platform }}${{ matrix.extension }}"
          asset_name: "cosmo-trigger-${{ matrix.platform }}${{ matrix.extension }}"
          # yamllint enable rule:line-length
          asset_content_type: "application/octet-stream"
...
