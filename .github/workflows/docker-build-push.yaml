---
name: "docker-build-push"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch: {}
  push:
    branches:
      - "main"
      - "develop"
      - "feature/*"
      - "hotfix/*"
    tags:
      - "v*.*.*"

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "${{ github.repository }}"

jobs:
  docker-build-push-job:
    runs-on: "ubuntu-24.04"
    permissions:
      contents: "read"
      packages: "write"
      attestations: "write"
      id-token: "write"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4.3.0"
        with:
          fetch-depth: 0
          ref: "${{ github.event.workflow_run.head_sha || github.sha }}"

      - name: "Get latest tag for workflow_run events"
        if: "${{ github.event_name == 'workflow_run' }}"
        id: "get_tag"
        run: |
          # Get the latest tag that points to the current commit
          TAG=$(git describe --tags --exact-match HEAD 2>/dev/null || echo "")
          if [ -n "$TAG" ]; then
            echo "Found tag: $TAG"
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
            echo "is_tag=true" >> "$GITHUB_OUTPUT"
          else
            echo "No tag found for this commit"
            echo "is_tag=false" >> "$GITHUB_OUTPUT"
          fi

      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
        with:
          platforms: "linux/amd64,linux/arm64"

      - name: "Set up QEMU for multi-platform builds"
        uses: "docker/setup-qemu-action@v3"
        with:
          platforms: "arm64"

      - name: "Log in to Container Registry"
        if: >-
          ${{
            github.event_name != 'workflow_run' ||
            github.event.workflow_run.conclusion == 'success'
          }}
        uses: "docker/login-action@v3"
        with:
          registry: "${{ env.REGISTRY }}"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: "Extract metadata"
        id: "meta"
        uses: "docker/metadata-action@v5"
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          # yamllint disable rule:line-length
          tags: |
            # Branch event
            type=ref,event=branch
            # Tag event
            type=ref,event=tag
            # PR event
            type=ref,event=pr
            # Set latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Set edge tag for develop branch
            type=raw,value=edge,enable=${{ github.ref == 'refs/heads/develop' }}
            # Handle tags when triggered via workflow_run
            type=raw,value=${{ steps.get_tag.outputs.tag }},enable=${{ github.event_name == 'workflow_run' && steps.get_tag.outputs.is_tag == 'true' }}
            # Version tags for workflow_run events (v1.0.1, v1.0, v1)
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}},value=${{ steps.get_tag.outputs.tag }},enable=${{ github.event_name == 'workflow_run' && steps.get_tag.outputs.is_tag == 'true' }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ steps.get_tag.outputs.tag }},enable=${{ github.event_name == 'workflow_run' && steps.get_tag.outputs.is_tag == 'true' }}
            type=semver,pattern=v{{major}},value=${{ steps.get_tag.outputs.tag }},enable=${{ github.event_name == 'workflow_run' && steps.get_tag.outputs.is_tag == 'true' }}
            # Version tags for direct tag push events (v1.0.1, v1.0, v1)
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}},enable=${{ github.event_name == 'push' && github.ref_type == 'tag' }}
            type=semver,pattern=v{{major}}.{{minor}},enable=${{ github.event_name == 'push' && github.ref_type == 'tag' }}
            type=semver,pattern=v{{major}},enable=${{ github.event_name == 'push' && github.ref_type == 'tag' }}
            # SHA for all events
            type=sha
          # yamllint enable rule:line-length

      - name: "Build and push Docker image"
        id: "build"
        uses: "docker/build-push-action@v6"
        with:
          context: "."
          file: "./Dockerfile"
          platforms: "linux/amd64,linux/arm64"
          push: >-
            ${{
              github.event_name != 'workflow_run' ||
              github.event.workflow_run.conclusion == 'success'
            }}
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          provenance: true
          sbom: true
          build-args: |
            APP_USER_NAME=cosmo-trigger
            APP_USER_UID=1001
            APP_GROUP_NAME=cosmo-trigger
            APP_GROUP_GID=1001

      - name: "Generate artifact attestation"
        if: >-
          ${{
            github.event_name != 'workflow_run' ||
            github.event.workflow_run.conclusion == 'success'
          }}
        uses: "actions/attest-build-provenance@v2"
        with:
          subject-name: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          subject-digest: "${{ steps.build.outputs.digest }}"
          push-to-registry: true

      - name: "Output image details"
        run: |
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"
          echo "Metadata: ${{ steps.meta.outputs.json }}"
...
